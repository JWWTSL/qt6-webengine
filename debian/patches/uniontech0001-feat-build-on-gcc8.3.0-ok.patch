From 7bf766d284beb284dc5570c8ee92971b6cfa0d30 Mon Sep 17 00:00:00 2001
From: Ma Aiguo <maaiguo@uniontech.com>
Date: Mon, 7 Mar 2022 15:40:37 +0800
Subject: [PATCH] feat: build qtwebengine 6.2.2 on 1041 ok

Change-Id: I49288c1858171e9719dc6b8eec0d9b168010cf90
---
 .../viz/service/display_embedder/output_presenter_x11.cc       | 3 ++-
 .../services/network/public/cpp/cross_origin_read_blocking.cc  | 2 +-
 .../public/cpp/memory_instrumentation/os_metrics_linux.cc      | 2 +-
 src/3rdparty/chromium/ui/gfx/x/property_cache.cc               | 2 +-
 4 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/3rdparty/chromium/components/viz/service/display_embedder/output_presenter_x11.cc b/src/3rdparty/chromium/components/viz/service/display_embedder/output_presenter_x11.cc
index 835bcf65d..ea3fa53d6 100644
--- a/src/3rdparty/chromium/components/viz/service/display_embedder/output_presenter_x11.cc
+++ b/src/3rdparty/chromium/components/viz/service/display_embedder/output_presenter_x11.cc
@@ -31,6 +31,7 @@ extern "C" {
 #include "ui/gfx/x/dri3.h"
 #include "ui/gfx/x/future.h"
 #include "ui/gfx/x/present.h"
+#include "ui/gfx/x/generated_protos/present.h"
 
 #define VK_STRUCTURE_TYPE_WSI_IMAGE_CREATE_INFO_MESA (VkStructureType)1000001002
 struct wsi_image_create_info {
@@ -445,7 +446,7 @@ void OutputPresenterX11::OnX11::PostSubBuffer(
   image->WaitForVkFence();
 
   last_target_msc_ = std::max(last_present_msc_, last_target_msc_) + 1;
-  x11::Connection::Get()->present().PresentPixmap({
+  x11::Connection::Get()->present().PresentPixmap(x11::Present::PresentPixmapRequest{
       .window = window_,
       .pixmap = image->pixmap(),
       .idle_fence = image->idle_fence()->fence(),
diff --git a/src/3rdparty/chromium/services/network/public/cpp/cross_origin_read_blocking.cc b/src/3rdparty/chromium/services/network/public/cpp/cross_origin_read_blocking.cc
index 19956a102..a9ae48d81 100644
--- a/src/3rdparty/chromium/services/network/public/cpp/cross_origin_read_blocking.cc
+++ b/src/3rdparty/chromium/services/network/public/cpp/cross_origin_read_blocking.cc
@@ -250,7 +250,7 @@ void BlockResponseHeaders(
 // "application/pdf" even though Chrome happens to support this resource type.
 const auto& GetNeverSniffedMimeTypes() {
   static constexpr auto kNeverSniffedMimeTypes = base::MakeFixedFlatSet<
-      base::StringPiece>({
+      base::StringPiece>((std::common_type_t<base::StringPiece> []){
       // clang-format off
       // The types below (zip, protobuf, etc.) are based on most commonly used
       // content types according to HTTP Archive - see:
diff --git a/src/3rdparty/chromium/services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics_linux.cc b/src/3rdparty/chromium/services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics_linux.cc
index 9c329cb5f..a621dfd10 100644
--- a/src/3rdparty/chromium/services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics_linux.cc
+++ b/src/3rdparty/chromium/services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics_linux.cc
@@ -28,7 +28,7 @@
 #include "services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics.h"
 
 // Symbol with virtual address of the start of ELF header of the current binary.
-extern char __ehdr_start;
+char __ehdr_start;
 
 namespace memory_instrumentation {
 
diff --git a/src/3rdparty/chromium/ui/gfx/x/property_cache.cc b/src/3rdparty/chromium/ui/gfx/x/property_cache.cc
index 2f318a250..ad13c01b8 100644
--- a/src/3rdparty/chromium/ui/gfx/x/property_cache.cc
+++ b/src/3rdparty/chromium/ui/gfx/x/property_cache.cc
@@ -65,7 +65,7 @@ void PropertyCache::OnEvent(const Event& xev) {
 }
 
 void PropertyCache::FetchProperty(Atom property, PropertyValue* value) {
-  value->future = connection_->GetProperty({
+  value->future = connection_->GetProperty(GetPropertyRequest{
       .window = window_,
       .property = property,
       .long_length = std::numeric_limits<uint32_t>::max(),
-- 
2.20.1

